// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: meta.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace Rpc
{

    public static partial class Extensions
    {
        public static string GetReq(this global::Google.Protobuf.Reflection.EnumValueOptions obj)
            => obj == null ? default : global::ProtoBuf.Extensible.GetValue<string>(obj, 1000);

        public static void SetReq(this global::Google.Protobuf.Reflection.EnumValueOptions obj, string value)
            => global::ProtoBuf.Extensible.AppendValue<string>(obj, 1000, value);

        public static string GetAck(this global::Google.Protobuf.Reflection.EnumValueOptions obj)
            => obj == null ? default : global::ProtoBuf.Extensible.GetValue<string>(obj, 1001);

        public static void SetAck(this global::Google.Protobuf.Reflection.EnumValueOptions obj, string value)
            => global::ProtoBuf.Extensible.AppendValue<string>(obj, 1001, value);

        public static string GetDesc(this global::Google.Protobuf.Reflection.EnumValueOptions obj)
            => obj == null ? default : global::ProtoBuf.Extensible.GetValue<string>(obj, 1002);

        public static void SetDesc(this global::Google.Protobuf.Reflection.EnumValueOptions obj, string value)
            => global::ProtoBuf.Extensible.AppendValue<string>(obj, 1002, value);

        public static bool GetnoCacheAck(this global::Google.Protobuf.Reflection.EnumValueOptions obj)
            => obj == null ? default : global::ProtoBuf.Extensible.GetValue<bool>(obj, 1003);

        public static void SetnoCacheAck(this global::Google.Protobuf.Reflection.EnumValueOptions obj, bool value)
            => global::ProtoBuf.Extensible.AppendValue<bool>(obj, 1003, value);

    }
}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
